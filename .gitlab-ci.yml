stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  BLUE_CONTAINER: ludo-server-blue
  GREEN_CONTAINER: ludo-server-green
  BLUE_PORT: 7771
  GREEN_PORT: 7772
  IP: ip-172-31-0-179

build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
  only:
    - main

deploy:
  stage: deploy
  image: ubuntu:22.04
  before_script:
    - apt-get update && apt-get install -y openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    # Determine which container is currently active (blue or green)
    - ssh ubuntu@ip-172-31-0-179 "docker ps --filter 'name=$BLUE_CONTAINER' --format '{{.Names}}' | grep $BLUE_CONTAINER || echo 'not_running'" > blue_status
    - if [ "$(cat blue_status)" = "$BLUE_CONTAINER" ]; then
        ACTIVE_CONTAINER=$BLUE_CONTAINER
        NEW_CONTAINER=$GREEN_CONTAINER
        NEW_PORT=$GREEN_PORT
        OLD_PORT=$BLUE_PORT
      else
        ACTIVE_CONTAINER=$GREEN_CONTAINER
        NEW_CONTAINER=$BLUE_CONTAINER
        NEW_PORT=$BLUE_PORT
        OLD_PORT=$GREEN_PORT
      fi

    # Deploy the new container
    - ssh ubuntu@ip-172-31-0-179 "docker pull $DOCKER_IMAGE"
    - ssh ubuntu@ip-172-31-0-179 "docker stop $NEW_CONTAINER || true"
    - ssh ubuntu@ip-172-31-0-179 "docker rm $NEW_CONTAINER || true"
    - ssh ubuntu@ip-172-31-0-179 "docker run -d --name $NEW_CONTAINER -p $NEW_PORT:7770 -v /home/aramco/ludo-data:/root/.config $DOCKER_IMAGE"

    # Test the new container
    - ssh ubuntu@ip-172-31-0-179 "curl --fail http://localhost:$NEW_PORT || exit 1"

    # Switch traffic to the new container by updating Nginx
    - ssh ubuntu@ip-172-31-0-179 "sudo sed -i 's/server 127.0.0.1:$OLD_PORT/server 127.0.0.1:$NEW_PORT/' /etc/nginx/sites-available/ludo-server"
    - ssh ubuntu@ip-172-31-0-179 "sudo nginx -t && sudo systemctl reload nginx"

    # Stop and remove the old container
    - ssh ubuntu@ip-172-31-0-179 "docker stop $ACTIVE_CONTAINER || true"
    - ssh ubuntu@ip-172-31-0-179 "docker rm $ACTIVE_CONTAINER || true"
  only:
    - main